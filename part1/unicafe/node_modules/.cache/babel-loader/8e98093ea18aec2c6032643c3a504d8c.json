{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\fullstack\\\\part1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Average = props => {\n  const good = props.good;\n  const bad = props.bad;\n  const neutral = props.neutral;\n  const average = (good + bad * -1) / 3;\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, \"Average:\", average);\n};\n\nconst Ppercent = props => {\n  good = props.good;\n  total = props.total;\n  const percent = good / total * 100;\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \"Positive:\", percent, \"%\");\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"give feedback\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setGood(good + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"good\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setNeutral(neutral + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setBad(bad + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"bad\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Good:\", good), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Neutral:\", neutral), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Bad:\", bad), /*#__PURE__*/React.createElement(Average, {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["E:/project/fullstack/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Average","props","good","bad","neutral","average","Ppercent","total","percent","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAU;AACxB,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAMC,GAAG,GAAGF,KAAK,CAACE,GAAlB;AACA,QAAMC,OAAO,GAAGH,KAAK,CAACG,OAAtB;AAEA,QAAMC,OAAO,GAAG,CAACH,IAAI,GAAEC,GAAG,GAAC,CAAC,CAAZ,IAAgB,CAAhC;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYE,OAAZ,CADF;AAGD,CATD;;AAWA,MAAMC,QAAQ,GAAIL,KAAD,IAAW;AAC1BC,EAAAA,IAAI,GAACD,KAAK,CAACC,IAAX;AACAK,EAAAA,KAAK,GAACN,KAAK,CAACM,KAAZ;AACA,QAAMC,OAAO,GAAEN,IAAI,GAACK,KAAN,GAAa,GAA3B;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaC,OAAb,MADF;AAGD,CAPD;;AASA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACP,IAAD,EAAOQ,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUO,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACK,GAAD,EAAMS,MAAN,IAAgBd,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAIY,OAAO,CAACR,IAAI,GAAC,CAAN,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAIS,UAAU,CAACP,OAAO,GAAC,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAQ,IAAA,OAAO,EAAE,MAAIQ,MAAM,CAACT,GAAG,GAAC,CAAL,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAKW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALX,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASD,IAAT,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYE,OAAZ,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQD,GAAR,CATF,eAUE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAED,IAAf;AAAqB,IAAA,GAAG,EAAEC,GAA1B;AAA+B,IAAA,OAAO,EAAEC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAeD,CArBD;;AAuBAL,QAAQ,CAACc,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst Average = (props) =>{\r\n  const good = props.good\r\n  const bad = props.bad\r\n  const neutral = props.neutral\r\n\r\n  const average = (good+(bad*-1))/3\r\n  return(\r\n    <p>Average:{average}</p>\r\n  )\r\n}\r\n\r\nconst Ppercent = (props) => {\r\n  good=props.good\r\n  total=props.total\r\n  const percent=(good/total)*100\r\n  return(\r\n    <p>Positive:{percent}%</p>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  // save clicks of each button to own state\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n\r\n  return (\r\n    <div>\r\n      <h1>give feedback</h1>\r\n      <button onClick={()=>setGood(good+1)}>good</button>\r\n      <button onClick={()=>setNeutral(neutral+1)}>neutral</button>\r\n      <button onClick={()=>setBad(bad+1)}>bad</button>\r\n      <br></br><br></br>\r\n      <h2>Statistics</h2>\r\n      <p>Good:{good}</p>\r\n      <p>Neutral:{neutral}</p>\r\n      <p>Bad:{bad}</p>\r\n      <Average good={good} bad={bad} neutral={neutral} />\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, \r\n  document.getElementById('root')\r\n)"]},"metadata":{},"sourceType":"module"}