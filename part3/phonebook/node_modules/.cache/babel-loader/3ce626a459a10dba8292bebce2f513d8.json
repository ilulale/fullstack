{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jawar\\\\part1\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = ({\n  good,\n  bad,\n  neutral\n}) => {\n  const avg = total => {\n    let gg = good;\n    let bb = bad * -1;\n    return (gg + bb) / total;\n  };\n\n  const pos = total => {\n    return good / total / 100;\n  };\n\n  if (good + bad + neutral != 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, \"Good: \", good, \"  \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, \"Neutral: \", neutral), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, \"Bad: \", bad, \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 3\n      }\n    }, \"Total: \", good + bad + neutral, \" Average: \", avg(good + bad + neutral), \" Positive: \", pos(good + bad + neutral), \"%\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    }, \"Press the button to view stats\"));\n  }\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const clickGood = () => {\n    setGood(good + 1);\n  };\n\n  const clickNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const clickBad = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Give feedback\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickGood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickNeutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickBad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Bad\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/jawar/part1/src/index.js"],"names":["React","useState","ReactDOM","Statistics","good","bad","neutral","avg","total","gg","bb","pos","App","setGood","setNeutral","setBad","clickGood","clickNeutral","clickBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst Statistics = ({good, bad, neutral}) =>{\r\n  const avg= (total) =>{\r\n    let gg=good\r\n    let bb=bad*-1\r\n    return (gg+bb)/total\r\n  }\r\n  \r\n  const pos= (total)=>{\r\n    return (good/total)/100\r\n  }\r\n  if(good+bad+neutral!=0){\r\n  return(\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      <p>Good: {good}  </p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad} </p>\r\n      <hr></hr>\r\n  <p>Total: {good+bad+neutral} Average: {avg(good+bad+neutral)} Positive: {pos(good+bad+neutral)}%</p>\r\n    </div>\r\n  )}\r\n  else{\r\n    return(\r\n      <div><h2>Press the button to view stats</h2></div>\r\n    )\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  // save clicks of each button to own state\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n\r\n  \r\nconst clickGood= () =>{\r\n setGood(good+1)   \r\n}\r\nconst clickNeutral= () =>{\r\n  setNeutral(neutral+1)   \r\n }\r\nconst clickBad= () =>{\r\n  setBad(bad+1)   \r\n}\r\n  return (\r\n    <div>\r\n      <h1>Give feedback</h1>\r\n      <button onClick = {clickGood}>Good</button>\r\n      <button onClick = {clickNeutral}>Neutral</button>\r\n      <button onClick = {clickBad}>Bad</button>\r\n      <br></br>\r\n      <Statistics good={good} bad ={bad} neutral={neutral} /> \r\n      </div>  \r\n  )\r\n\r\n}\r\n\r\nReactDOM.render(<App />, \r\n  document.getElementById('root')\r\n)"]},"metadata":{},"sourceType":"module"}