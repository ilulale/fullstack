{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jawar\\\\part1\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const clickGood = () => {\n    setGood(good + 1);\n  };\n\n  const clickNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const clickBad = () => {\n    setBad(bad + 1);\n  };\n\n  const avg = total => {\n    let gg = good;\n    let bb = bad * -1;\n    return (gg + bb) / total;\n  };\n\n  const pos = total => {\n    return good / total / 100;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Give feedback\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickGood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickNeutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickBad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Bad\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Statistics\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Good: \", good, \"  \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Neutral: \", neutral), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Bad: \", bad, \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, \"Total: \", good + bad + neutral, \" Average: \", avg(good + bad + neutral), \" Positive: \", pos(good + bad + neutral), \"%\"));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/jawar/part1/src/index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","clickGood","clickNeutral","clickBad","avg","total","gg","bb","pos","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;;AAGF,QAAMS,SAAS,GAAE,MAAK;AACrBL,IAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACA,GAFD;;AAGA,QAAMO,YAAY,GAAE,MAAK;AACvBJ,IAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AACA,GAFF;;AAGA,QAAMM,QAAQ,GAAE,MAAK;AACnBH,IAAAA,MAAM,CAACD,GAAG,GAAC,CAAL,CAAN;AACD,GAFD;;AAIA,QAAMK,GAAG,GAAGC,KAAD,IAAU;AACnB,QAAIC,EAAE,GAACX,IAAP;AACA,QAAIY,EAAE,GAACR,GAAG,GAAC,CAAC,CAAZ;AACA,WAAO,CAACO,EAAE,GAACC,EAAJ,IAAQF,KAAf;AACD,GAJD;;AAMA,QAAMG,GAAG,GAAGH,KAAD,IAAS;AAClB,WAAQV,IAAI,GAACU,KAAN,GAAa,GAApB;AACD,GAFD;;AAGE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAQ,IAAA,OAAO,EAAIJ,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,IAAA,OAAO,EAAIC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAQ,IAAA,OAAO,EAAIC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUR,IAAV,OAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaE,OAAb,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASE,GAAT,MATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWJ,IAAI,GAACI,GAAL,GAASF,OAApB,gBAAuCO,GAAG,CAACT,IAAI,GAACI,GAAL,GAASF,OAAV,CAA1C,iBAAyEW,GAAG,CAACb,IAAI,GAACI,GAAL,GAASF,OAAV,CAA5E,MAXE,CADF;AAgBD,CA1CD;;AA4CAJ,QAAQ,CAACgB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst App = () => {\r\n  // save clicks of each button to own state\r\n  const [good, setGood] = useState(0)\r\n  const [neutral, setNeutral] = useState(0)\r\n  const [bad, setBad] = useState(0)\r\n\r\n  \r\nconst clickGood= () =>{\r\n setGood(good+1)   \r\n}\r\nconst clickNeutral= () =>{\r\n  setNeutral(neutral+1)   \r\n }\r\nconst clickBad= () =>{\r\n  setBad(bad+1)   \r\n}\r\n\r\nconst avg= (total) =>{\r\n  let gg=good\r\n  let bb=bad*-1\r\n  return (gg+bb)/total\r\n}\r\n\r\nconst pos= (total)=>{\r\n  return (good/total)/100\r\n}\r\n  return (\r\n    <div>\r\n      <h1>Give feedback</h1>\r\n      <button onClick = {clickGood}>Good</button>\r\n      <button onClick = {clickNeutral}>Neutral</button>\r\n      <button onClick = {clickBad}>Bad</button>\r\n      <br></br>\r\n      <h2>Statistics</h2>\r\n      <p>Good: {good}  </p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad} </p>\r\n      <hr></hr>\r\n  <p>Total: {good+bad+neutral} Average: {avg(good+bad+neutral)} Positive: {pos(good+bad+neutral)}%</p>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, \r\n  document.getElementById('root')\r\n)"]},"metadata":{},"sourceType":"module"}